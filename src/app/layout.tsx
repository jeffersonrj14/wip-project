import './globals.css'
import type { Metadata } from 'next'
import { Geist, Geist_Mono } from 'next/font/google'
import { SizeIndicator } from '@/components/shared/sizeIndicator'
import { Analytics } from '@/components/shared/analytics'
import { SITE_DESCRIPTION, SITE_KEYWORDS, SITE_NAME, SITE_TITLE, SITE_URL } from '@/lib/constants'
import grid from './grid.svg'

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin']
})

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin']
})

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export const metadata: Metadata = {
  metadataBase: new URL(SITE_URL),
  title: {
    default: SITE_TITLE,
    template: `%s | ${SITE_TITLE}`
  },
  description: SITE_DESCRIPTION,
  authors: {
    name: SITE_NAME,
    url: SITE_URL
  },
  manifest: '',
  keywords: SITE_KEYWORDS,
  openGraph: {
    type: 'website',
    locale: 'en_US',
    url: SITE_URL,
    title: SITE_TITLE,
    siteName: SITE_TITLE,
    description: SITE_DESCRIPTION
    // images: [
    //   {
    //     url: '/images/og.png',
    //     width: 1200,
    //     height: 630,
    //     alt: SITE_DESCRIPTION,
    //     type: 'image/png'
    //   }
    // ]
  },
  twitter: {
    card: 'summary_large_image',
    title: SITE_NAME,
    description: SITE_DESCRIPTION,
    creator: '@jeffersonrj14',
    images: [
      {
        url: '/images/og.png',
        width: 1200,
        height: 630,
        alt: SITE_DESCRIPTION
      }
    ]
  }
  // icons: {
  //   icon: '/favicon/favicon.ico',
  //   shortcut: '/favicon/favicon.ico',
  //   apple: [
  //     {
  //       url: '/favicon/apple-touch-icon.png',
  //       sizes: '180x180',
  //       type: 'image/png'
  //     }
  //   ],
  //   other: [
  //     {
  //       rel: 'icon',
  //       type: 'image/png',
  //       sizes: '16x16',
  //       url: '/favicon/favicon-16x16.png'
  //     },
  //     {
  //       rel: 'icon',
  //       type: 'image/png',
  //       sizes: '32x32',
  //       url: '/favicon/favicon-32x32.png'
  //     }
  //   ]
  // }
}

interface ChildrenProps {
  readonly children: React.ReactNode
}

export default function RootLayout({ children }: ChildrenProps) {
  return (
    <html lang='en-US'>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <div
          className='absolute inset-0 -z-20 size-full'
          style={{
            backgroundImage: `url(${grid.src})`
          }}
        />
        <div
          className='absolute inset-0 -z-10 size-full'
          style={{
            backgroundImage: 'linear-gradient(0deg, rgba(0,0,0,0.8) 20%, rgba(0,0,0,0) 100%)'
          }}
        />
        {process.env.NODE_ENV === 'development' && <SizeIndicator />}
        <main>{children}</main>
        <Analytics />
      </body>
    </html>
  )
}
